// WisPaper SEO Database Schema
// Academic paper content management system with SEO optimization

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums removed - all fields now use String type

// Core Models
model Institution {
  id          String   @id @default(uuid())
  name        String
  type        String?
  description String?
  country     String?
  city        String?
  website     String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("institutions")
}

model Author {
  id            String   @id @default(uuid())
  name          String
  email         String?
  orcid         String?
  institutionId String?  @map("institution_id")
  bio           String?
  homepage      String?
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@map("authors")
}

model Venue {
  id        String   @id @default(uuid())
  name      String
  city      String
  country   String
  address   String?
  latitude  Float?
  longitude Float?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("venues")
}

model Conference {
  id                 String            @id @default(uuid())
  name               String
  acronym            String?
  description        String?
  website            String?
  submissionDeadline DateTime?         @map("submission_deadline")
  notificationDate   DateTime?         @map("notification_date")
  conferenceDate     DateTime?         @map("conference_date")
  venueId            String?           @map("venue_id")
  status             String?
  createdAt          DateTime          @default(now()) @map("created_at")
  updatedAt          DateTime          @updatedAt @map("updated_at")

  @@map("conferences")
}

model Journal {
  id          String       @id @default(uuid())
  name        String
  acronym     String?
  issn        String?
  eissn       String?
  description String?
  website     String?
  publisher   String?
  impactFactor Float?      @map("impact_factor")
  status      String?
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")

  @@map("journals")
}

model Paper {
  id             String      @id @default(uuid())
  title          String
  abstract       String?
  doi            String?
  arxivId        String?     @map("arxiv_id")
  pdfUrl         String?     @map("pdf_url")
  publicationDate DateTime?  @map("publication_date")
  conferenceId   String?     @map("conference_id")
  journalId      String?     @map("journal_id")
  venue          String?
  pages          String?
  volume         String?
  issue          String?
  citationCount  Int         @default(0) @map("citation_count")
  status         String?
  seoScore       Float?      @map("seo_score")
  createdAt      DateTime    @default(now()) @map("created_at")
  updatedAt      DateTime    @updatedAt @map("updated_at")

  @@map("papers")
}

model Keyword {
  id         String   @id @default(uuid())
  name       String
  category   String?
  frequency  Int      @default(1)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("keywords")
}

model Abstract {
  id           String        @id @default(uuid())
  paperId      String?       @map("paper_id")
  content      String
  language     String        @default("en")
  source       String?
  qualityScore Float?        @map("quality_score")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")

  @@map("abstracts")
}

model Task {
  id           String     @id @default(uuid())
  type         String?
  status       String?
  priority     Int        @default(5)
  payload      Json
  result       Json?
  errorMessage String?    @map("error_message")
  retryCount   Int        @default(0) @map("retry_count")
  maxRetries   Int        @default(3) @map("max_retries")
  scheduledAt  DateTime?  @map("scheduled_at")
  startedAt    DateTime?  @map("started_at")
  completedAt  DateTime?  @map("completed_at")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")

  @@map("tasks")
}

model TaskLog {
  id        String   @id @default(uuid())
  taskId    String?  @map("task_id")
  level     String?
  message   String
  metadata  Json?
  createdAt DateTime @default(now()) @map("created_at")

  @@map("task_logs")
}

// Junction Tables
model PaperAuthor {
  id              String  @id @default(uuid())
  paperId         String? @map("paper_id")
  authorId        String? @map("author_id")
  order           Int
  isCorresponding Boolean @default(false) @map("is_corresponding")
  createdAt       DateTime @default(now()) @map("created_at")

  @@map("paper_authors")
}

model PaperKeyword {
  id              String  @id @default(uuid())
  paperId         String? @map("paper_id")
  keywordId       String? @map("keyword_id")
  relevanceScore  Float?  @map("relevance_score")
  createdAt       DateTime @default(now()) @map("created_at")

  @@map("paper_keywords")
}
